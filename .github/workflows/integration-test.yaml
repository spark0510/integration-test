name: Integration tests

on:
  workflow_dispatch:
    inputs:
      Github_Actions:
        type: boolean
        description: Test Github Actions
      OpenWhisk:
        type: boolean
        description: Test OpenWhisk
      Lambda:
        type: boolean
        description: Test Lambda

env:
  TIDYVERSE_VERSION: 4.3.1
  FAASR_VERSION: 1.0.9.0
  FAASR_TAG: 1.0.9.0
  FAASR_INSTALL_REPO: spark0510/FaaSr-package
  GHCR_IO_REPO: spark0510
  TAG_SUFFIX: dev
  AWS_REGION: us-east-1
  SECRET_PAYLOAD: ${{ secrets.SECRET_PAYLOAD }}
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
  GH_USE: ${{ github.event.inputs.Github_Actions }}
  OW_USE: ${{ github.event.inputs.OpenWhisk }}
  LD_USE: ${{ github.event.inputs.Lambda }}

permissions: write-all

jobs:
  get_payload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        if: ${{ github.event.inputs.OpenWhisk }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to the Github Container registry
        if: ${{ github.event.inputs.Github_Actions }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_IO_REPO }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        if: ${{ github.event.inputs.Lambda  }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: "Check file existence"
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "payload_new.json"
      
      - name: Delete old file
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git rm payload_new.json
          git commit -m "remove old file"
          git push
          
      - name: Replace letters for openwhisk
        run: |
          if [[ $GH_USE == "true" ]]; then
            replace_function_1="My_GitHub_Account"
            replace_container_1="ghcr.io/${{ env.GHCR_IO_REPO }}/github-actions-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            if [[ $OW_USE == "true"  ]]; then
              replace_function_2="My_IBM_Account"
              replace_container_2="${{ secrets.DOCKERHUB_USERNAME }}/openwhisk-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
              if [[ $LD_USE == "true"  ]]; then
                replace_function_3="My_AWS_Account"
                replace_container_3="${{ steps.login-ecr.outputs.registry }}/aws-lambda-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
              else 
                replace_function_3="My_GitHub_Account"
                replace_container_3="ghcr.io/${{ env.GHCR_IO_REPO }}/github-actions-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
              fi
            elif [[ $LD_USE == "true"  ]]; then
              replace_function_2="My_AWS_Account"
              replace_container_2="${{ steps.login-ecr.outputs.registry }}/aws-lambda-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
              replace_function_3="My_GitHub_Account"
              replace_container_3="ghcr.io/${{ env.GHCR_IO_REPO }}/github-actions-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            else 
              replace_function_2="My_GitHub_Account"
              replace_container_2="ghcr.io/${{ env.GHCR_IO_REPO }}/github-actions-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
              replace_function_3="My_GitHub_Account"
              replace_container_3="ghcr.io/${{ env.GHCR_IO_REPO }}/github-actions-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            fi
          elif [[ $OW_USE == "true"  ]]; then
            replace_function_1="My_IBM_Account"
            replace_container_1="${{ secrets.DOCKERHUB_USERNAME }}/openwhisk-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            replace_function_3="My_IBM_Account"
            replace_container_3="${{ secrets.DOCKERHUB_USERNAME }}/openwhisk-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            if [[ $LD_USE == "true"  ]]; then
              replace_function_2="My_AWS_Account"
              replace_container_2="${{ steps.login-ecr.outputs.registry }}/aws-lambda-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            else 
              replace_function_2="My_IBM_Account"
              replace_container_2="${{ secrets.DOCKERHUB_USERNAME }}/openwhisk-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            fi
          elif [[ $LD_USE == "true"  ]]; then
            replace_function_1="My_AWS_Account"
            replace_container_1="${{ steps.login-ecr.outputs.registry }}/aws-lambda-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            replace_function_2="My_AWS_Account"
            replace_container_2="${{ steps.login-ecr.outputs.registry }}/aws-lambda-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
            replace_function_3="My_AWS_Account"
            replace_container_3="${{ steps.login-ecr.outputs.registry }}/aws-lambda-tidyverse:${{ env.FAASR_VERSION }}-${{ env.TAG_SUFFIX }}"
          fi

          function_1="faasr_test_function_1"
          function_2="faasr_test_function_2"
          function_3="faasr_test_function_3"
          
          container_1="faasr_test_container_1"
          container_2="faasr_test_container_2"
          container_3="faasr_test_container_3"

          cp payload.json payload_new.json
          sed -i "s|$function_1|$replace_function_1|g" payload_new.json
          sed -i "s|$function_2|$replace_function_2|g" payload_new.json
          sed -i "s|$function_3|$replace_function_3|g" payload_new.json

          sed -i "s|$container_1|$replace_container_1|g" payload_new.json
          sed -i "s|$container_2|$replace_container_2|g" payload_new.json
          sed -i "s|$container_3|$replace_container_3|g" payload_new.json

          git_hub_name="$GITHUB_REPOSITORY"

          sed -i "s|git_hub_name|$git_hub_name|g" payload_new.json

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "generated"
          git push
          
  test-faasr:
    needs: get_payload
    runs-on: ubuntu-latest
    container: spark77/faasr-testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create env File
        run: |
          echo "$SECRET_PAYLOAD" > "env"

      - name: Install FaaSr package
        run: |
          Rscript -e "args <- commandArgs(trailingOnly=TRUE); library(devtools); install_github(paste0(args[1],'@',args[2]),force=TRUE)" $FAASR_INSTALL_REPO $FAASR_TAG 
          Rscript -e "devtools::install_github('cboettig/minioclient'); library(minioclient); install_mc()"

      - name: Run the test
        run: |
          Rscript -e "test <- FaaSr::faasr('payload_new.json', 'env'); test[['register_workflow']](); Sys.sleep(10); test[['invoke_workflow']]()"
          Rscript -e "cli::cli_alert_info('testing...')"
          sleep 300
          
      - name: Check the result
        run: |
          Rscript -e "minioclient::mc_cat('play/faasr-test/test/test.txt')"
          Rscript -e "minioclient::mc_rm('play/faasr-test/test/test.txt')"
